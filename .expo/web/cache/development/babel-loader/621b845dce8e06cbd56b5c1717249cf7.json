{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport LocationError from \"./LocationError\";\nvar OS = Platform.OS;\nvar Version = parseInt(Platform.Version);\nvar ReactNativeGetLocation = NativeModules.ReactNativeGetLocation;\n\nfunction openUrlIfCan(_x) {\n  return _openUrlIfCan.apply(this, arguments);\n}\n\nfunction _openUrlIfCan() {\n  _openUrlIfCan = _asyncToGenerator(function* (url) {\n    if (yield Linking.canOpenURL(url)) {\n      yield Linking.openURL(url);\n      return true;\n    }\n\n    return false;\n  });\n  return _openUrlIfCan.apply(this, arguments);\n}\n\nfunction openIOSSettings(_x2) {\n  return _openIOSSettings.apply(this, arguments);\n}\n\nfunction _openIOSSettings() {\n  _openIOSSettings = _asyncToGenerator(function* (root) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    if (yield openUrlIfCan(\"App-Prefs:root=\" + root + (path ? \"&path=\" + path : ''))) {\n      return true;\n    }\n\n    if (yield openUrlIfCan('App-Prefs:')) {\n      return true;\n    }\n\n    return false;\n  });\n  return _openIOSSettings.apply(this, arguments);\n}\n\n;\n\nfunction requestAndroidPermission() {\n  return _requestAndroidPermission.apply(this, arguments);\n}\n\nfunction _requestAndroidPermission() {\n  _requestAndroidPermission = _asyncToGenerator(function* () {\n    var enableHighAccuracy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var PERMISSIONS = PermissionsAndroid.PERMISSIONS,\n        RESULTS = PermissionsAndroid.RESULTS;\n    var granted = yield PermissionsAndroid.request(enableHighAccuracy ? PERMISSIONS.ACCESS_FINE_LOCATION : PERMISSIONS.ACCESS_COARSE_LOCATION);\n\n    if (granted !== RESULTS.GRANTED) {\n      throw new LocationError('UNAUTHORIZED', 'Authorization denied');\n    }\n\n    return true;\n  });\n  return _requestAndroidPermission.apply(this, arguments);\n}\n\nexport default {\n  getCurrentPosition: function () {\n    var _getCurrentPosition = _asyncToGenerator(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        enableHighAccuracy: false,\n        timeout: 0\n      };\n\n      if (OS === 'android') {\n        yield requestAndroidPermission(options.enableHighAccuracy);\n      }\n\n      try {\n        var location = yield ReactNativeGetLocation.getCurrentPosition(options);\n        return location;\n      } catch (error) {\n        var code = error.code,\n            message = error.message;\n        var locationError = new LocationError(code, message);\n        locationError.stack = error.stack;\n        throw locationError;\n      }\n    });\n\n    function getCurrentPosition() {\n      return _getCurrentPosition.apply(this, arguments);\n    }\n\n    return getCurrentPosition;\n  }(),\n  openAppSettings: function openAppSettings() {\n    return ReactNativeGetLocation.openAppSettings();\n  },\n  openWifiSettings: function () {\n    var _openWifiSettings = _asyncToGenerator(function* () {\n      if (OS === 'android') {\n        return ReactNativeGetLocation.openWifiSettings();\n      }\n\n      if (yield openIOSSettings('WIFI')) {\n        return true;\n      }\n\n      return ReactNativeGetLocation.openAppSettings();\n    });\n\n    function openWifiSettings() {\n      return _openWifiSettings.apply(this, arguments);\n    }\n\n    return openWifiSettings;\n  }(),\n  openCelularSettings: function () {\n    var _openCelularSettings = _asyncToGenerator(function* () {\n      if (OS === 'android') {\n        return ReactNativeGetLocation.openCelularSettings();\n      }\n\n      if (yield openIOSSettings('MOBILE_DATA_SETTINGS_ID')) {\n        return true;\n      }\n\n      return ReactNativeGetLocation.openAppSettings();\n    });\n\n    function openCelularSettings() {\n      return _openCelularSettings.apply(this, arguments);\n    }\n\n    return openCelularSettings;\n  }(),\n  openGpsSettings: function () {\n    var _openGpsSettings = _asyncToGenerator(function* () {\n      if (OS === 'android') {\n        return ReactNativeGetLocation.openGpsSettings();\n      }\n\n      if (Version >= 10) {\n        if (yield openIOSSettings('Privacy', 'LOCATION')) {\n          return true;\n        }\n      } else {\n        if (yield openIOSSettings('LOCATION_SERVICES')) {\n          return true;\n        }\n      }\n\n      return ReactNativeGetLocation.openAppSettings();\n    });\n\n    function openGpsSettings() {\n      return _openGpsSettings.apply(this, arguments);\n    }\n\n    return openGpsSettings;\n  }()\n};","map":{"version":3,"names":["LocationError","OS","Platform","Version","parseInt","ReactNativeGetLocation","NativeModules","openUrlIfCan","url","Linking","canOpenURL","openURL","openIOSSettings","root","path","requestAndroidPermission","enableHighAccuracy","PERMISSIONS","PermissionsAndroid","RESULTS","granted","request","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","GRANTED","getCurrentPosition","options","timeout","location","error","code","message","locationError","stack","openAppSettings","openWifiSettings","openCelularSettings","openGpsSettings"],"sources":["C:/Users/devandroid/Desktop/AndroidVarios/node_modules/react-native-get-location/index.js"],"sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2019 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport {\n    NativeModules, Platform, Linking,\n    PermissionsAndroid,\n} from 'react-native';\n\nimport LocationError from './LocationError';\n\nconst { OS } = Platform;\nconst Version = parseInt(Platform.Version);\nconst { ReactNativeGetLocation } = NativeModules;\n\nasync function openUrlIfCan(url) {\n    if (await Linking.canOpenURL(url)) {\n        await Linking.openURL(url);\n        return true;\n    }\n    return false;\n}\n\nasync function openIOSSettings(root, path = '') {\n    if (await openUrlIfCan(`App-Prefs:root=${root}${path ? `&path=${path}` : ''}`)) {\n        return true;\n    }\n    if (await openUrlIfCan('App-Prefs:')) {\n        return true;\n    }\n    return false;\n};\n\nasync function requestAndroidPermission(enableHighAccuracy = false) {\n    const { PERMISSIONS, RESULTS } = PermissionsAndroid;\n    const granted = await PermissionsAndroid.request(enableHighAccuracy\n        ? PERMISSIONS.ACCESS_FINE_LOCATION\n        : PERMISSIONS.ACCESS_COARSE_LOCATION);\n    if (granted !== RESULTS.GRANTED) {\n        throw new LocationError('UNAUTHORIZED', 'Authorization denied');\n    }\n    return true;\n}\n\nexport default {\n    async getCurrentPosition(options = {\n        enableHighAccuracy: false,\n        timeout: 0,\n    }) {\n        if (OS === 'android') {\n            await requestAndroidPermission(options.enableHighAccuracy);\n        }\n        try {\n            const location = await ReactNativeGetLocation.getCurrentPosition(options);\n            return location;\n        } catch (error) {\n            const { code, message } = error;\n            const locationError = new LocationError(code, message);\n            locationError.stack = error.stack;\n            throw locationError;\n        }\n    },\n\n    // Extra functions\n\n    openAppSettings() {\n        return ReactNativeGetLocation.openAppSettings();\n    },\n\n    /**\n     * Only for Android\n     */\n    async openWifiSettings() {\n        if (OS === 'android') {\n            return ReactNativeGetLocation.openWifiSettings();\n        }\n\n        if (await openIOSSettings('WIFI')) {\n            return true;\n        }\n\n        return ReactNativeGetLocation.openAppSettings();\n    },\n\n    /**\n     * Only for Android\n     */\n    async openCelularSettings() {\n        if (OS === 'android') {\n            return ReactNativeGetLocation.openCelularSettings();\n        }\n\n        if (await openIOSSettings('MOBILE_DATA_SETTINGS_ID')) {\n            return true;\n        }\n\n        return ReactNativeGetLocation.openAppSettings();\n    },\n\n    /**\n     * Only for Android\n     */\n    async openGpsSettings() {\n        if (OS === 'android') {\n            return ReactNativeGetLocation.openGpsSettings();\n        }\n\n        if (Version >= 10) {\n            if (await openIOSSettings('Privacy', 'LOCATION')) {\n                return true;\n            }\n        } else {\n            if (await openIOSSettings('LOCATION_SERVICES')) {\n                return true;\n            }\n        }\n\n        return ReactNativeGetLocation.openAppSettings();\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}